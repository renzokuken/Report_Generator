demo()
demo(recursion)
demo(image)
demo(smooth)
//comment
/*comment*/
help(comment)
#comment
Import_Data <<- 1
If Import_Data == 1 {}
if (Import_Data == 1){}
if (Import_Data == 1){demos()}
if (Import_Data == 1){print("Hello World")}
if (Import_Data == 0){print(Hello World)}
if (Import_Data == 1){print(Hello World)}
if (Import_Data == 0){print("Hello World")}
help(print)
help(get)
helloworld <- cat('Hello, world!\n')
helloworld
c <- cat('Hello, world!\n')
c
x <- (1,2,3)
x <- 1
x
cat('Is: this, thing| on?')
cat(test)
cat('test')
help cat()
help
help cat
help function
help <-
tes
help ggplot()
help list
help list()
help
print('Hello, World!')
print('Hello, World!\n')
q()
q()
q()
x <- "Hello, World!"
print(x)
echo(x)
cat(x)
setwd("GitHub/Report_Generator")
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
fix(statescore.plot.4)
plot(statescore.plot.4)
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
View(statescore.graph.4)
plot(statescore.plot.4)
print(statescore.plot.4)
statescore.plot.4
fix(statescore.plot.4)
View(statescore.graph)
View(statescore.graph.1)
statescore.mod <- reshape(statescore.raw,
varying = c("State_Scores_Percent", "District_Scores_Percent", "School_Scores_Percent"),
v.names = "score",
timevar = "score_level",
times = c("State_Scores_Percent", "District_Scores_Percent", "School_Scores_Percent"),
new.row.names = 1:5000,
direction = "long")
#multiply percentage
statescore.mod$score <- (statescore.mod$score * 100)
#set column order
statescore.mod$order <- (ifelse(statescore.mod$score_level == "School_Scores_Percent", 1, ifelse(statescore.mod$score_level == "District_Scores_Percent", 2, 3)))
#set ordering for graphs
statescore.mod$order <- as.integer(paste(statescore.mod$order, statescore.mod$Score_Grouping_Cat_ID, sep=""))
#set labels for buckets
statescore.mod$score_stack <- paste(statescore.mod$score_level, statescore.mod$Score_Grouping_Name, sep= "_")
#replace underscores
statescore.mod$score_stack <- gsub("_"," ", statescore.mod$score_stack)
#remove "score" because it looks stupid :/
statescore.mod$score_stack <- gsub(" Scores ", " ", statescore.mod$score_stack)
#cut trailing spaces
statescore.mod$Subtest_Name <- gsub("[[:space:]]*$","", statescore.mod$Subtest_Name)
statescore.mod
View(statescore.mod)
statescore <- subset(statescore.mod, Grade %in% c(8,99))
view(statescore.mod)
View(statescore.mod)
View(statescore)
test1 <- if(statescore$Grade[statescore$Grade==99]) {statescore$Grade <- statescore$Subtest_Name}
fix(test1)
if(statescore%Grade==99) {statescore$Grade <- statescore$Subtest_Name}
as.character(statescore$Grade)
statescore$Grade <- as.character(statescore$Grade)
if(statescore$Grade=="99"){statescore$Grade <- statescore$Subtest_Name}
View(statescore)
statescore <- subset(statescore.mod, Grade %in% c(8,99))
View(statescore)
if(statescore$Grade[statescore$Grade=="99"]){statescore$Grade <- statescore$Subtest_Name}
if(statescore1$Grade[statescore1$Grade=="99"]){statescore1$Grade <- statescore1$Subtest_Name}
statescore <- subset(statescore.mod, Grade %in% c(8,99))
if(statescore$Grade[statescore$Grade=="99"]){statescore$Grade <- statescore$Subtest_Name}
View(statescore)
if(statescore$Grade[statescore$Grade=="99"]){statescore$Grade[statescore$Grade=="99"] <- statescore$Subtest_Name}
View(statescore)
statescore <- subset(statescore.mod, Grade %in% c(8,99))
if(statescore$Grade[statescore$Grade=="99"]){statescore$Grade[statescore$Grade=="99"] <- statescore$Subtest_Name}
View(statescore)
if(statescore$Grade[statescore$Grade=="99"]){statescore$Grade[statescore$Grade=="99"] <- statescore$Subtest_Name[statescore$Grade=="99"]}
statescore <- subset(statescore.mod, Grade %in% c(8,99))
if(statescore$Grade[statescore$Grade=="99"]){statescore$Grade[statescore$Grade=="99"] <- statescore$Subtest_Name[statescore$Grade=="99"]}
View(statescore)
statescore <- subset(statescore.mod, Grade %in% c(8,99))
statescore$Grade[statescore$Grade=="99"] <- statescore$Subtest_Name[statescore$Grade=="99"]
view(statescore)
View(statescore)
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
View(statescore.graph)
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
test <-
x
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
640 / 4
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
source9"HTML_loop_engine.R"
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
6.8 * .75
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
View(statescore.raw)
q()
