source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
q()
source('~/GitHub/R_Shenanigans/map_quartile_graph.R')
str(Quartile)
str(quartile)
head(quartile)
head(quartile)
rstudio::viewData(d)
source('~/GitHub/R_Shenanigans/map_quartile_graph.R')
theme_get()
source('~/GitHub/R_Shenanigans/map_quartile_graph.R')
source('~/GitHub/R_Shenanigans/map_quartile_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/map_quartile_graph.R')
source('~/GitHub/R_Shenanigans/map_quartile_graph.R')
source('~/GitHub/R_Shenanigans/map_quartile_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
q()
help(mosaicplot)
demo(mosaicplot)
demo(plot)
demo(ggplot)
demo(qplot)
demo()
demo(smooth)
demo(is.things)
rm(list=ls())
q()
n
q()
v <- c(1,1,1)
v + 1
source('~/GitHub/R_Shenanigans/map_quartile_graph.R')
e
mean(e$order)
e$order <- 1
mean(e$order)
q()
source('~/GitHub/R_Shenanigans/map_quartile_graph.R')
e[5,]
a <- e[5,]
a
a <- c(e[5,])
a
levels(a)
a <- as.numeric(e[5,])
a
a <- unlist(e[5,])
a
a ,- unname(a)
a <- unname(unlist(e[5,]))
a
a <- as.array(e[5,])
a <- as.character(e[5,])
a
a <- c(1,5,"banana")
a
as.character(as.vector(e[5,]))
help(t)
x <- matrix(;etters[1:9],ncol=3)
x <- matrix(letters[1:9],ncol=3)
x
match(x, letters)
array(match(x, letters), dim-dim(x), dimnames=dimnames(x))
array(match(x, letters), dim=dim(x), dimnames=dimnames(x))
help(letters)
letters
letters
numbers
help(scan)
scan(e[5,])
a <- as.character(e[5,])
a
q()
a <- c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)
a
lapply(a,median)
lapply(a(1:3,25:29),median)
lapply(a[1:3,],median)
lapply(a[1,],median)
help(matrix)
g <- c(5)
array <- c(g,g,g)
array
q()
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
rstudio::viewData(state_scores_long)
state_scores_long$score_stack <- ordered("School_Score_Percent_Proficient", "School_Score_Percent_Advanced", "District_Score_Percent_Proficient", "District_Score_Percent_Advanced", "State_Score_Percent_Proficient", "State_Score_Percent_Advanced")
factor(state_scores_long$score_stack)
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
rm(list=ls())
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/map_quartile_graph.R')
source('~/GitHub/R_Shenanigans/map_quartile_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
state_scores_long$order
rstudio::viewData(state_scores_long)
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
state_scores_long$order
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
state_scores_long$order
rstudio::viewData(e)
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
help(reorder)
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
q()
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
namco <- data.frame(variable= c("resembles", "does not resemble"),
value = c(80,20))
library(ggplot)
library(ggplot2)
ggplot(namco(, aes(x = "", y = value, fill = variable)) +
geom_bar(width = 1, stat = "identity") +
scale_fill_manual(values = c("red", "yellow")) +
coord_polar("y", start = pi / 3) +
labs(title = "Pac man")
)
namco
ggplot(namco, aes(x = "", y = value, fill-variable)) + geom_bar(width = 1, stat = "identity") + scale_fill_manual(values = c("red", "yellow")) + coord_polar("y", start = pi / 3) + labs(title = "Pac man")
q()
round_any(135,10)
library(reshape)
round_any(135,10)
round_any(135,25,ceiling)
x <- c(1,5,7,-12,14,21)
min(x)
round_any(min(x),5,f=floor)
round_any(min(x),10,f=floor)
round_any(max(x),10,f=ceiling)
help(environment)
.e <- environment
environment()
help(pch)
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
q()
install.package("shiny")
install.packages("shiny")
library("shiny")
runExample("01_Hello")
q()
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
q()
source('~/GitHub/R_Shenanigans/map_quartile_graph.R')
source('~/GitHub/R_Shenanigans/map_quartile_graph.R')
source('~/GitHub/R_Shenanigans/map_quartile_graph.R')
q()
q()
help(integer)
help(double)
help(decimal)
help(float)
3 / 10 == 0.3
1.3 %% 1
3 / 10 == 1.3 %% 1
4 % 2
4 %% 2
7 %% 3
q()
a <- barplot(1)
x <- c(1,2)
plot <- paste("barplot(",x,")")
plot
barplot(x)
barplot(x)
plot <- barplot(x)
plot
plot
x
print(x)
print(plot)
plot(plot)
plot(print(barplotx))
plot <- print(barplot(x))
plot
q()
source('~/GitHub/R_Shenanigans/map_quartile_graph.R')
sessionInfo()
source('~/GitHub/R_Shenanigans/map_quartile_graph.R')
source('~/GitHub/R_Shenanigans/map_quartile_graph.R')
source('~/GitHub/R_Shenanigans/map_quartile_graph.R')
source('~/GitHub/R_Shenanigans/map_quartile_graph.R')
source('~/GitHub/R_Shenanigans/map_quartile_graph.R')
source('~/GitHub/R_Shenanigans/map_quartile_graph.R')
source('~/GitHub/R_Shenanigans/map_quartile_graph.R')
source('~/GitHub/R_Shenanigans/map_quartile_graph.R')
source('~/GitHub/R_Shenanigans/map_quartile_graph.R')
source('~/GitHub/R_Shenanigans/map_quartile_graph.R')
help(reorder)
source('~/GitHub/R_Shenanigans/map_quartile_graph.R')
q()
source('~/GitHub/R_Shenanigans/ggplot2_MAP_dist.R')
source('~/GitHub/R_Shenanigans/ggplot2_MAP_dist.R')
source('~/GitHub/R_Shenanigans/ggplot2_MAP_dist.R')
source('~/GitHub/R_Shenanigans/ggplot2_MAP_dist.R')
source('~/GitHub/R_Shenanigans/ggplot2_MAP_dist.R')
source('~/GitHub/R_Shenanigans/ggplot2_MAP_dist.R')
source('~/GitHub/R_Shenanigans/ggplot2_MAP_dist.R')
source('~/GitHub/R_Shenanigans/ggplot2_MAP_dist.R')
source('~/GitHub/R_Shenanigans/ggplot2_MAP_dist.R')
source('~/GitHub/R_Shenanigans/ggplot2_MAP_dist.R')
source('~/GitHub/R_Shenanigans/ggplot2_MAP_dist.R')
install.packages("Cairo")
source('~/GitHub/R_Shenanigans/ggplot2_MAP_dist.R')
source('~/GitHub/R_Shenanigans/ggplot2_MAP_dist.R')
source('~/GitHub/R_Shenanigans/ggplot2_MAP_dist.R')
source('~/GitHub/R_Shenanigans/ggplot2_MAP_dist.R')
source('~/GitHub/R_Shenanigans/ggplot2_MAP_dist.R')
source('~/GitHub/R_Shenanigans/ggplot2_MAP_dist.R')
source('~/GitHub/R_Shenanigans/ggplot2_MAP_dist.R')
source('~/GitHub/R_Shenanigans/ggplot2_MAP_dist.R')
source('~/GitHub/R_Shenanigans/ggplot2_MAP_dist.R')
source('~/GitHub/R_Shenanigans/ggplot2_MAP_dist.R')
q()
a <- c(1,2,3)
b <- c(4,5,6)
union(a,b)
q()
source('~/GitHub/R_Shenanigans/state_scores_graph.R')
rm(list=ls())
q()
q()
q()
2 ^ 19
plot?
()
plot()?
?
?
?
)
install.packages("animation")
library(animation)
demo('fire')
demo('Mandelbrot')
demo('game_of_life')
q()
help(utils)
library(help="utils")
help(save)
q()
73 / 125
87/ 125
q()
source("GitHub/Report_Generator/HTML_loop_engine.R")
rstudio::viewData(quartile.mod)
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
rstudio::viewData(quartile.mod)
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
rstudio::viewData(`q2`)
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
levels(quartile.mod$Graph_Label)
reorder(quartile.mod$Graph_Label, quartile.mod$sequence)
levels(quartile.mod$Graph_Label)
reorder(levels(quartile.mod$Graph_Label, quartile.mod$sequence))
levels(quartile.mod$Graph_Label <-reorder(quartile.mod$Graph_Label, quartile.mod$sequence)
)
levels(quartile.mod$Graph_Label) <-reorder(quartile.mod$Graph_Label, quartile.mod$sequence)
levels(quartile.mod$Graph_Label)
factor(quartile.mod$sequence)
levels("quartile_mod$sequence")
leveles(quartile.mod$sequence)
levels(quartile.mod$sequence)
factor(quartile.mod$sequence)
levels(quartile.mod$Graph_Label) <- reorder(levels(quartile.mod$Graph_Label, levels(quartile.mod$sequence)))
levels(quartile.mod$Graph_Label) <- reorder(levels(quartile.mod$Graph_Label), levels(quartile.mod$sequence)))
levels(quartile.mod$Graph_Label) <- reorder(levels(quartile.mod$Graph_Label), levels(quartile.mod$sequence))
reorder(levels(quartile.mod$Graph_Label), levels(quartile.mod$sequence))
levels(quartile.mod$Graph_Label)
levels(quartile.mod$sequence)
factor(quartile.mod$sequence)
levels(quartile.mod$sequence)
levels(quartile.mod$Graph_Label)
quartile.mod$Graph_Label <- factor(quartile.mod$Graph_Label, levels = quartile.mod$Graph_Label[order(quartile.mod$sequence)], ordered=TRUE)
levels(quartile.mod$Graph_Label)
factor(quartile.mod$Graph_Label, levels = quartile.mod$Graph_Label[order(quartile.mod$sequence)], ordered=TRUE)
factor(quartile.mod$Graph_Label)
levels(quartile.mod$Graph_Label)
rm(list=ls())
source(HTML_loop_engine.R)
source("HTML_loop_engine.R")
levels(quartile.mod$Graph_Label)
relevel(quartile.mod$Graph_Label, quartile.mod$sequence)
reorder(quartile.mod$Graph_Label, quartile.mod$sequence), is.ordered(quartile.mod$Graph_Label)
reorder(quartile.mod$Graph_Label, quartile.mod$sequence), order = is.ordered(quartile.mod$Graph_Label)
reorder(quartile.mod$Graph_Label, quartile.mod$sequence, order = is.ordered(quartile.mod$Graph_Label))
reorder(quartile.mod$Graph_Label, quartile.mod$sequence, order = is.ordered(quartile.mod$sequence))
quartile.mod$sequence <- quartile.mod$Graph_Label
undo
rm(list=ls())
source("HTML_loop_engine.R")
quartile.mod$sequence <- factor(quartile.mod$sequence, ordered = is.ordered(quartile.mod$sequence)
)
levels(quartile.mod$sequence)
levels(quartile.mod$Graph_Label)
reorder(levels(quartile.mod$Graph_Label), levels(quartile.mod$sequence))
levels(quartile.mod$sequence)
levels(quartile.mod$Graph_Label)
list <- levels(quartile.mod$sequence)
list
list <- c(levels(quartilemod$sequence))
derp <- c(1,2,3,4,5)
derp
reorder(levels(quartile.mod$Graph_Label, list))
reorder(levels(quartile.mod$Graph_Label, list))
source("HTML_loop_engine.R")
order(quartile.mod$Graph_Label)
q1$Graph_Label
order(q1$Graph_Label)
factor(q1$Graph_Label)
levels(q1$Graph_Label)
rstudio::viewData(`q2`)
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
levels(q1$Graph_Label)
levels(q1$Graph_Label, order = q1$sequence)
levels(q1$Graph_Label, order = levels(q1$sequence))
list1 <- unique(q1$Graph_Label)
list1
list2 <- unique(q1$sequence)
list2
list3 <- reorder(list1, as.character(list2))
list3
list2
order(as.character(list2))
list2
list3 <- reorder(list1, order(as.character(list2)))
list3
order(list3)
zszzzzzz
source("HTML_loop_engine.R")
q1$Graph_Label
unique(q1$Graph_Label)
reorder(unique(q1$Graph_Label, order(as.character(unique(q1$sequence)))))
unique(q1$sequence)
order(unique(q1$sequence))
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
unique(quartile.graph$Graph_Label)
list1 <- reorder(unique(quartile.graph$Graph_Label), order(unique(quartile.graph$sequence)))
list1
order(unique(quartile.graph$sequence))
attr(, "scores")
quartile.mod$Graph_Label <- reorder(quartile.mod$Graph_Label,quartile.mod$sequence)
warnings()
quartile.mod$Graph_Label <- reorder(quartile.mod$Graph_Label,as.character(quartile.mod$sequence))
order(quartile.mod$Graph_Label)
order(unique(quartile.mod$Graph_Label))
unqie(quartile.mod$Graph_Label)
unique(quartile.mod$Graph_Label)
listx <- order(quartile.mod$sequence)
listx
unique(quartile.graph$Graph_Label)
listx <- unique(quartile.graph$Graph_Label)
listx
listy <- unique(quartile.graph$sequence)
listy
unfactor(quartile.graph$Graph_Label)
quartile.graph$Graph_Label <- as.character(quartile.graph$Graph_Label)
unique(quartile.graph$Graph_Label)
listx <- unique(quartile.graph$Graph_Label)
reorder(listx, listy)
listx
listy
listz <- order(listy)
reorder(listx, listz)
listy
order(listy)
reorder(listy, order(listy))
order(as.character(listy))
reorder(listx, as.character(listy))
order(listx)
listz <- (order(as.character(listy)))
listz
listx
reorder(listx, c(1, 4, 2, 3))
reorder(listx, c(1,3,4,2))
sort(listx, listy)
sort(listx, listz)
sort(listx, partial =listz)
listz <- order(reorder(listy))
order(listy)
reorder(order(listy))
listy
reorder(as.character(listy))
reorder(listy)
reorder(listy, as.character(listy))
listy
listy <- as.character(listy)
reorder(listy, as.character(listy))
rerder(as.character(listy, as.charcter(listy)))
reorder(as.character(listy), as.character(listy))
listy
listx
unique(quartile.graph$Graph_Label)
x_labels <- reorder(quartile.graph$Graph_Label, c(1,4,3,2))
x_labels <- reorder(unique(quartile.graph$Graph_Label), c(1,4,3,2))
x_labels
as.character(x_labels)
levels(x_labels)
unique(quartile.graph$Graph_Label)
x_labels <- reorder(quartile.graph$Graph_Label, c(1,3,4,2))
x_labels <- reorder(unique(quartile.graph$Graph_Label), c(1,3,4,2))
x_labels
levels(x_labels)
source("HTML_loop_engine.R")
unique(quartile.mod$sequence)
unique(quartile.mod$Graph_Label)
omega <- reorder(quartile.mod$Graph_Label, c(10, 11, 12, 13, 14, 6, 7, 9, 8, 1, 2, 4, 5, 3))
omega <- reorder(unique(quartile.mod$Graph_Label), c(10, 11, 12, 13, 14, 6, 7, 9, 8, 1, 2, 4, 5, 3))
omega
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
<- reorder(unique(quartile.mod$Graph_Label), c(10, 11, 12, 13, 14, 6, 7, 9, 8, 1, 2, 4, 5, 3))
source("HTML_loop_engine.R")
x_labels
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
source("HTML_loop_engine.R")
x_labels
x_labels <- factor(x_labels)
x_labels
source("HTML_loop_engine.R")
set.seed(42)
42
seed(42)
q()
